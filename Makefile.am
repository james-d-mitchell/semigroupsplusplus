##############################################################################
# Automake configuration
##############################################################################

AM_CXXFLAGS =  -I. -Wall -Wextra -pedantic -Wno-c++11-extensions -std=c++11 
AM_CXXFLAGS += -g -O3 -march=native
AM_LDFLAGS  =  -no-undefined

ACLOCAL_AMFLAGS	= -I m4

## We include libsemigroups-config.h in the distribution even though it is 
## autogenerated by configure, since it is required to allow libsemigroups to
## be included in other projects, such as the GAP package Semigroups where it
## will not be compiled directly but within the build system of the other
## project. In such a case, the configure script of libsemigroups will not be
## called, and if we do not include libsemigroups-config.h in the distribution
## it will not exist, and so compilation will fail. 
##
## libsemigroups-config.h is included in libsemigroups-debug.h so that, for
## example,
##
##    ./configure --enable-debug
## 
## can define the preprocessor symbol LIBSEMIGROUP_DEBUG to enable certain
## lines of code, and assertions. 

## libsemigroups headers
pkginclude_HEADERS =  src/libsemigroups-config.h
pkginclude_HEADERS += src/libsemigroups-debug.h
pkginclude_HEADERS += src/libsemigroups-exception.h
pkginclude_HEADERS += src/blocks.h
pkginclude_HEADERS += src/bmat.h
pkginclude_HEADERS += src/cong.h
pkginclude_HEADERS += src/elements.h
pkginclude_HEADERS += src/partition.h
pkginclude_HEADERS += src/recvec.h
pkginclude_HEADERS += src/report.h
pkginclude_HEADERS += src/rws.h
pkginclude_HEADERS += src/rwse.h
pkginclude_HEADERS += src/semigroups.h
pkginclude_HEADERS += src/semiring.h
pkginclude_HEADERS += src/timer.h
pkginclude_HEADERS += src/uf.h

lib_LTLIBRARIES = libsemigroups.la

## libsemigroups sources

libsemigroups_la_SOURCES =  src/blocks.cc
libsemigroups_la_SOURCES += src/bmat.cc
libsemigroups_la_SOURCES += src/cong.cc
libsemigroups_la_SOURCES += src/elements.cc
libsemigroups_la_SOURCES += src/semigroups.cc
libsemigroups_la_SOURCES += src/rws.cc
libsemigroups_la_SOURCES += src/rwse.cc
libsemigroups_la_SOURCES += src/uf.cc

libsemigroups_la_CPPFLAGS = -DCONFIG_H $(CODE_COVERAGE_CPPFLAGS)
libsemigroups_la_CFLAGS = $(CODE_COVERAGE_CFLAGS) 
libsemigroups_la_CXXFLAGS = $(AM_CXXFLAGS) $(CODE_COVERAGE_CXXFLAGS)

libsemigroups_la_LIBS = $(AM_LDFLAGS) $(CODE_COVERAGE_LIBS)

## Extra files for the distribution

LINT_FORMAT_FILES_EXTRA =  src/cong/kbfp.h
LINT_FORMAT_FILES_EXTRA += src/cong/kbp.h
LINT_FORMAT_FILES_EXTRA += src/cong/p.h
LINT_FORMAT_FILES_EXTRA += src/cong/tc.h

LINT_FORMAT_FILES_EXTRA += src/cong/kbfp.cc
LINT_FORMAT_FILES_EXTRA += src/cong/kbp.cc
LINT_FORMAT_FILES_EXTRA += src/cong/p.cc
LINT_FORMAT_FILES_EXTRA += src/cong/tc.cc

EXTRA_DIST = $(LINT_FORMAT_FILES_EXTRA)
EXTRA_DIST += tests/catch.hpp
EXTRA_DIST += README.md LICENSE CPPLINT.cfg .clang-format Doxyfile
EXTRA_DIST += VERSION

BENCHMARK_LINT_FORMAT =  benchmark/src/bmat.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/cong.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/examples.h
BENCHMARK_LINT_FORMAT += benchmark/src/nridempotents.bm.cpp
BENCHMARK_LINT_FORMAT += benchmark/src/semigroups.bm.cpp

## lstest sources 

CHECK_LOG_DIR = tests/log
CHECK_PROG    = ./lstest$(EXEEXT)
CHECK_FLAGS1  = --durations yes --use-colour yes --order lex --abort 
CHECK_FLAGS2  = [quick],[standard]

check_PROGRAMS = lstest

lstest_SOURCES=  tests/main.test.cc
lstest_SOURCES+= tests/bmat.test.cc
lstest_SOURCES+= tests/blocks.test.cc
lstest_SOURCES+= tests/cong.test.cc
lstest_SOURCES+= tests/elements.test.cc
lstest_SOURCES+= tests/kbfp.test.cc
lstest_SOURCES+= tests/kbp.test.cc
lstest_SOURCES+= tests/p.test.cc
lstest_SOURCES+= tests/partition.test.cc
lstest_SOURCES+= tests/recvec.test.cc
lstest_SOURCES+= tests/rws.test.cc
lstest_SOURCES+= tests/rwse.test.cc
lstest_SOURCES+= tests/semigroups.test.cc
lstest_SOURCES+= tests/semiring.test.cc
lstest_SOURCES+= tests/tc.test.cc
lstest_SOURCES+= tests/timer.test.cc
lstest_SOURCES+= tests/uf.test.cc

lstest_CPPFLAGS = -DCONFIG_H $(CODE_COVERAGE_CPPFLAGS)
lstest_CFLAGS = $(CODE_COVERAGE_CFLAGS) 
lstest_CXXFLAGS = $(AM_CXXFLAGS) $(CODE_COVERAGE_CXXFLAGS)

lstest_LIBS = $(AM_LDFLAGS) $(CODE_COVERAGE_LIBS)
lstest_LDADD = libsemigroups.la

## Make targets

@CODE_COVERAGE_RULES@

all-local: libsemigroups.la
if LIBSEMIGROUPS_DEBUG
	@echo "********************************************************************"
	@echo "************************ Debug mode enabled ************************"
	@echo "********************************************************************"
endif

clean-local: clean-local-check

clean-local-check:
	rm -rf $(CHECK_LOG_DIR) $(check_PROGRAMS)
	rm -rf benchmark/src/build
	rm -f benchmark/gbench/*.pyc
	rm -f benchmark/gbench/__py_cache__/*.pyc
.PHONY: clean-local-check

distclean-local: distclean-local-check
	rm -f src/libsemigroups-config.h
.PHONY: distclean-local-check

superclean: distclean
	git clean -xdf --exclude *.swp --exclude *.swo
.PHONY: superclean

check:	
	@$(mkdir_p) $(CHECK_LOG_DIR)
	@today=`date +%Y-%m-%d-%H-%M-%S`;                                   \
	echo "Running the tests ($(CHECK_LOG_DIR)/$$today.log) . . .";      \
	$(CHECK_PROG) $(CHECK_FLAGS1) $(CHECK_FLAGS2) | tee -a $(CHECK_LOG_DIR)/$$today.log; \
	( ! grep -q -E "FAILED|failed" $(CHECK_LOG_DIR)/$$today.log )

check-quick: CHECK_FLAGS2 = [quick]
check-quick: check

check-all: CHECK_FLAGS2 = 
check-all: check
.PHONY: check-quick, check-all

format: 
	@echo "Running clang-format . . .";  
	@clang-format -i $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES) 
	@clang-format -i $(LINT_FORMAT_FILES_EXTRA) $(lstest_SOURCES) 
	@clang-format -i $(BENCHMARK_LINT_FORMAT)

lint: 
	@echo "Running cpplint . . .";  
	@cpplint $(pkginclude_HEADERS) $(libsemigroups_la_SOURCES) 
	@cpplint $(LINT_FORMAT_FILES_EXTRA) $(lstest_SOURCES) 	
	@cpplint $(BENCHMARK_LINT_FORMAT)
	
doc:
	@echo "Generating documentation . . ."; \
	doxygen Doxyfile
	@echo "See: html/index.html";
